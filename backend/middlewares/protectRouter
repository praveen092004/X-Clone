import jwt from 'jsonwebtoken';
import User from '../models/user.model.js';

const protectRouter = async (req, res, next) => {
    try{
        // Check if the request has a JWT token in cookies
        const token = req.cookies.jwt;
        if (!token) {
            return res.status(401).json({ error: "Unauthorized: No token provided" });
        }

        // Verify the token
        const decoded = jwt.verify(token, process.env.JWT_SECRET);
        if (!decoded) {
            return res.status(400).json({ error: "Unauthorized: Invalid token" });
        }

        // Find the user associated with the token
        const user = await User.findOne({ _id: decoded.userId}).select("-password");
        if (!user) {
            return res.status(404).json({ error: "User not found" });
        }

        // Attach the user to the request object for further use in the route handlers
        req.user = user;
        next();
    } catch (error) {
        console.error(`Error in protectRouter: ${error.message}`);
        res.status(500).send('Internal Server Error');
    }
}

export default protectRouter;